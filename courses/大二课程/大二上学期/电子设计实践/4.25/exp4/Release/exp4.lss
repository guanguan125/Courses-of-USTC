
exp4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000025e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  0000025e  000002d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000304  2**2
                  CONTENTS, READONLY
  4 .debug_info   0000048c  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000044e  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000109  00000000  00000000  00000c1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000017a  00000000  00000000  00000d23  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	c3 c0       	rjmp	.+390    	; 0x18a <__vector_1>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	d1 c0       	rjmp	.+418    	; 0x1b4 <__vector_8>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee e5       	ldi	r30, 0x5E	; 94
  3a:	f2 e0       	ldi	r31, 0x02	; 2
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a2 36       	cpi	r26, 0x62	; 98
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	cd d0       	rcall	.+410    	; 0x1e4 <main>
  4a:	07 c1       	rjmp	.+526    	; 0x25a <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <TWI_Start>:
  4e:	84 ea       	ldi	r24, 0xA4	; 164
  50:	86 bf       	out	0x36, r24	; 54
  52:	06 b6       	in	r0, 0x36	; 54
  54:	07 fe       	sbrs	r0, 7
  56:	fd cf       	rjmp	.-6      	; 0x52 <TWI_Start+0x4>
  58:	08 95       	ret

0000005a <TWI_Write>:
  5a:	83 b9       	out	0x03, r24	; 3
  5c:	84 e8       	ldi	r24, 0x84	; 132
  5e:	86 bf       	out	0x36, r24	; 54
  60:	06 b6       	in	r0, 0x36	; 54
  62:	07 fe       	sbrs	r0, 7
  64:	fd cf       	rjmp	.-6      	; 0x60 <TWI_Write+0x6>
  66:	08 95       	ret

00000068 <TWI_Write_LCD>:
  68:	cf 93       	push	r28
  6a:	c8 2f       	mov	r28, r24
  6c:	f0 df       	rcall	.-32     	; 0x4e <TWI_Start>
  6e:	81 b1       	in	r24, 0x01	; 1
  70:	88 7f       	andi	r24, 0xF8	; 248
  72:	88 30       	cpi	r24, 0x08	; 8
  74:	11 f0       	breq	.+4      	; 0x7a <TWI_Write_LCD+0x12>
  76:	80 e0       	ldi	r24, 0x00	; 0
  78:	10 c0       	rjmp	.+32     	; 0x9a <TWI_Write_LCD+0x32>
  7a:	8e e4       	ldi	r24, 0x4E	; 78
  7c:	ee df       	rcall	.-36     	; 0x5a <TWI_Write>
  7e:	81 b1       	in	r24, 0x01	; 1
  80:	88 7f       	andi	r24, 0xF8	; 248
  82:	88 31       	cpi	r24, 0x18	; 24
  84:	c1 f7       	brne	.-16     	; 0x76 <TWI_Write_LCD+0xe>
  86:	8c 2f       	mov	r24, r28
  88:	88 60       	ori	r24, 0x08	; 8
  8a:	e7 df       	rcall	.-50     	; 0x5a <TWI_Write>
  8c:	81 b1       	in	r24, 0x01	; 1
  8e:	88 7f       	andi	r24, 0xF8	; 248
  90:	88 32       	cpi	r24, 0x28	; 40
  92:	89 f7       	brne	.-30     	; 0x76 <TWI_Write_LCD+0xe>
  94:	84 e9       	ldi	r24, 0x94	; 148
  96:	86 bf       	out	0x36, r24	; 54
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	cf 91       	pop	r28
  9c:	08 95       	ret

0000009e <LCD_4Bit_Write>:
  9e:	cf 93       	push	r28
  a0:	c8 2f       	mov	r28, r24
  a2:	e2 df       	rcall	.-60     	; 0x68 <TWI_Write_LCD>
  a4:	00 00       	nop
  a6:	8c 2f       	mov	r24, r28
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	de df       	rcall	.-68     	; 0x68 <TWI_Write_LCD>
  ac:	00 00       	nop
  ae:	8c 2f       	mov	r24, r28
  b0:	8b 7f       	andi	r24, 0xFB	; 251
  b2:	da df       	rcall	.-76     	; 0x68 <TWI_Write_LCD>
  b4:	80 e1       	ldi	r24, 0x10	; 16
  b6:	8a 95       	dec	r24
  b8:	f1 f7       	brne	.-4      	; 0xb6 <LCD_4Bit_Write+0x18>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <LCD_4Bit_Write+0x1e>
  bc:	cf 91       	pop	r28
  be:	08 95       	ret

000000c0 <LCD_8Bit_Write>:
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	c8 2f       	mov	r28, r24
  c6:	d6 2f       	mov	r29, r22
  c8:	80 7f       	andi	r24, 0xF0	; 240
  ca:	86 2b       	or	r24, r22
  cc:	e8 df       	rcall	.-48     	; 0x9e <LCD_4Bit_Write>
  ce:	20 e1       	ldi	r18, 0x10	; 16
  d0:	c2 9f       	mul	r28, r18
  d2:	c0 01       	movw	r24, r0
  d4:	11 24       	eor	r1, r1
  d6:	8d 2b       	or	r24, r29
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	e0 cf       	rjmp	.-64     	; 0x9e <LCD_4Bit_Write>

000000de <LCD_Init>:
  de:	83 ed       	ldi	r24, 0xD3	; 211
  e0:	90 e3       	ldi	r25, 0x30	; 48
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <LCD_Init+0x4>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <LCD_Init+0xa>
  e8:	00 00       	nop
  ea:	80 e3       	ldi	r24, 0x30	; 48
  ec:	d8 df       	rcall	.-80     	; 0x9e <LCD_4Bit_Write>
  ee:	84 e6       	ldi	r24, 0x64	; 100
  f0:	94 e0       	ldi	r25, 0x04	; 4
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Init+0x14>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <LCD_Init+0x1a>
  f8:	00 00       	nop
  fa:	80 e3       	ldi	r24, 0x30	; 48
  fc:	d0 df       	rcall	.-96     	; 0x9e <LCD_4Bit_Write>
  fe:	84 e6       	ldi	r24, 0x64	; 100
 100:	94 e0       	ldi	r25, 0x04	; 4
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Init+0x24>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Init+0x2a>
 108:	00 00       	nop
 10a:	80 e3       	ldi	r24, 0x30	; 48
 10c:	c8 df       	rcall	.-112    	; 0x9e <LCD_4Bit_Write>
 10e:	92 e3       	ldi	r25, 0x32	; 50
 110:	9a 95       	dec	r25
 112:	f1 f7       	brne	.-4      	; 0x110 <LCD_Init+0x32>
 114:	80 e2       	ldi	r24, 0x20	; 32
 116:	c3 df       	rcall	.-122    	; 0x9e <LCD_4Bit_Write>
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	88 e2       	ldi	r24, 0x28	; 40
 11c:	d1 df       	rcall	.-94     	; 0xc0 <LCD_8Bit_Write>
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	8c e0       	ldi	r24, 0x0C	; 12
 122:	ce df       	rcall	.-100    	; 0xc0 <LCD_8Bit_Write>
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	cb df       	rcall	.-106    	; 0xc0 <LCD_8Bit_Write>
 12a:	83 ef       	ldi	r24, 0xF3	; 243
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <LCD_Init+0x50>
 132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_Init+0x56>
 134:	00 00       	nop
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	86 e0       	ldi	r24, 0x06	; 6
 13a:	c2 df       	rcall	.-124    	; 0xc0 <LCD_8Bit_Write>
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	bf df       	rcall	.-130    	; 0xc0 <LCD_8Bit_Write>
 142:	83 ef       	ldi	r24, 0xF3	; 243
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <LCD_Init+0x68>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <LCD_Init+0x6e>
 14c:	00 00       	nop
 14e:	08 95       	ret

00000150 <LCD_Set_Cursor_Location>:
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	00 d0       	rcall	.+0      	; 0x156 <LCD_Set_Cursor_Location+0x6>
 156:	cd b7       	in	r28, 0x3d	; 61
 158:	de b7       	in	r29, 0x3e	; 62
 15a:	19 82       	std	Y+1, r1	; 0x01
 15c:	90 e4       	ldi	r25, 0x40	; 64
 15e:	9a 83       	std	Y+2, r25	; 0x02
 160:	fe 01       	movw	r30, r28
 162:	e8 0f       	add	r30, r24
 164:	f1 1d       	adc	r31, r1
 166:	81 81       	ldd	r24, Z+1	; 0x01
 168:	86 0f       	add	r24, r22
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	80 68       	ori	r24, 0x80	; 128
 16e:	0f 90       	pop	r0
 170:	0f 90       	pop	r0
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	a4 cf       	rjmp	.-184    	; 0xc0 <LCD_8Bit_Write>

00000178 <LCD_Write_NewChar>:
 178:	61 e0       	ldi	r22, 0x01	; 1
 17a:	a2 cf       	rjmp	.-188    	; 0xc0 <LCD_8Bit_Write>

0000017c <LCD_Write_Char>:
 17c:	cf 93       	push	r28
 17e:	c4 2f       	mov	r28, r20
 180:	e7 df       	rcall	.-50     	; 0x150 <LCD_Set_Cursor_Location>
 182:	61 e0       	ldi	r22, 0x01	; 1
 184:	8c 2f       	mov	r24, r28
 186:	cf 91       	pop	r28
 188:	9b cf       	rjmp	.-202    	; 0xc0 <LCD_8Bit_Write>

0000018a <__vector_1>:
 18a:	1f 92       	push	r1
 18c:	0f 92       	push	r0
 18e:	0f b6       	in	r0, 0x3f	; 63
 190:	0f 92       	push	r0
 192:	11 24       	eor	r1, r1
 194:	8f 93       	push	r24
 196:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 19a:	84 31       	cpi	r24, 0x14	; 20
 19c:	10 f4       	brcc	.+4      	; 0x1a2 <__vector_1+0x18>
 19e:	8f 5f       	subi	r24, 0xFF	; 255
 1a0:	01 c0       	rjmp	.+2      	; 0x1a4 <__vector_1+0x1a>
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 1a8:	8f 91       	pop	r24
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <__vector_8>:
 1b4:	1f 92       	push	r1
 1b6:	0f 92       	push	r0
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	0f 92       	push	r0
 1bc:	11 24       	eor	r1, r1
 1be:	2f 93       	push	r18
 1c0:	8f 93       	push	r24
 1c2:	9f 93       	push	r25
 1c4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1c8:	26 e0       	ldi	r18, 0x06	; 6
 1ca:	82 9f       	mul	r24, r18
 1cc:	c0 01       	movw	r24, r0
 1ce:	11 24       	eor	r1, r1
 1d0:	9b bd       	out	0x2b, r25	; 43
 1d2:	8a bd       	out	0x2a, r24	; 42
 1d4:	9f 91       	pop	r25
 1d6:	8f 91       	pop	r24
 1d8:	2f 91       	pop	r18
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <main>:
 1e4:	7c df       	rcall	.-264    	; 0xde <LCD_Init>
 1e6:	b9 9a       	sbi	0x17, 1	; 23
 1e8:	88 ec       	ldi	r24, 0xC8	; 200
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	97 bd       	out	0x27, r25	; 39
 1ee:	86 bd       	out	0x26, r24	; 38
 1f0:	8a e0       	ldi	r24, 0x0A	; 10
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	9b bd       	out	0x2b, r25	; 43
 1f6:	8a bd       	out	0x2a, r24	; 42
 1f8:	8f b5       	in	r24, 0x2f	; 47
 1fa:	80 6c       	ori	r24, 0xC0	; 192
 1fc:	8f bd       	out	0x2f, r24	; 47
 1fe:	8e b5       	in	r24, 0x2e	; 46
 200:	82 61       	ori	r24, 0x12	; 18
 202:	8e bd       	out	0x2e, r24	; 46
 204:	84 e0       	ldi	r24, 0x04	; 4
 206:	89 bf       	out	0x39, r24	; 57
 208:	8a 98       	cbi	0x11, 2	; 17
 20a:	85 b7       	in	r24, 0x35	; 53
 20c:	83 60       	ori	r24, 0x03	; 3
 20e:	85 bf       	out	0x35, r24	; 53
 210:	8b b7       	in	r24, 0x3b	; 59
 212:	80 64       	ori	r24, 0x40	; 64
 214:	8b bf       	out	0x3b, r24	; 59
 216:	78 94       	sei
 218:	da e0       	ldi	r29, 0x0A	; 10
 21a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 21e:	6d 2f       	mov	r22, r29
 220:	10 d0       	rcall	.+32     	; 0x242 <__udivmodqi4>
 222:	c9 2f       	mov	r28, r25
 224:	40 e3       	ldi	r20, 0x30	; 48
 226:	48 0f       	add	r20, r24
 228:	66 e0       	ldi	r22, 0x06	; 6
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	a7 df       	rcall	.-178    	; 0x17c <LCD_Write_Char>
 22e:	80 e3       	ldi	r24, 0x30	; 48
 230:	8c 0f       	add	r24, r28
 232:	a2 df       	rcall	.-188    	; 0x178 <LCD_Write_NewChar>
 234:	83 ef       	ldi	r24, 0xF3	; 243
 236:	91 e0       	ldi	r25, 0x01	; 1
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x54>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0x5a>
 23e:	00 00       	nop
 240:	ec cf       	rjmp	.-40     	; 0x21a <main+0x36>

00000242 <__udivmodqi4>:
 242:	99 1b       	sub	r25, r25
 244:	79 e0       	ldi	r23, 0x09	; 9
 246:	04 c0       	rjmp	.+8      	; 0x250 <__udivmodqi4_ep>

00000248 <__udivmodqi4_loop>:
 248:	99 1f       	adc	r25, r25
 24a:	96 17       	cp	r25, r22
 24c:	08 f0       	brcs	.+2      	; 0x250 <__udivmodqi4_ep>
 24e:	96 1b       	sub	r25, r22

00000250 <__udivmodqi4_ep>:
 250:	88 1f       	adc	r24, r24
 252:	7a 95       	dec	r23
 254:	c9 f7       	brne	.-14     	; 0x248 <__udivmodqi4_loop>
 256:	80 95       	com	r24
 258:	08 95       	ret

0000025a <_exit>:
 25a:	f8 94       	cli

0000025c <__stop_program>:
 25c:	ff cf       	rjmp	.-2      	; 0x25c <__stop_program>
