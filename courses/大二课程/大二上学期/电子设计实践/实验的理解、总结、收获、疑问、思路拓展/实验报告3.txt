PB22061324 张全
1.实验内容：
实验内容1：用PB3/2/1分别控制RGB LED中的R,G和B正
极，实现三种颜色以上的循环亮灭
实验内容2：利用PD2管脚实现蓝色的呼吸灯
实验内容3：用接在PD1管脚外的触摸开关去控制PB0管
脚外连接的LED按呼吸灯方式亮灭
实验内容4：用接在PD6管脚的触摸开关控制PB2,3,4管
脚上的RGB LED的亮灭
2.实验理解：
模块化设计，将每个实验内容分别用一个子程序来实现
*三种颜色的循环亮灭：
int i,j;
	DDRB |= (1<<DDRB1)|(1<<DDRB2)|(1<<DDRB3);
    while (1) 
    {
		PORTB = (1<<PORTB1);//only red on
		for(i=0;i<100;i++)
		for(j=0;j<1000;j++);
		PORTB = (1<<PORTB2);//only green on
		for(i=0;i<100;i++)
		for(j=0;j<1000;j++);
		PORTB = (1<<PORTB3);//only blue on
		for(i=0;i<100;i++)
		for(j=0;j<1000;j++);
    }

*利用PD2管脚实现蓝色的呼吸灯：
int i,j;
	DDRD = (1<<DDRD2); 
	while(1)
	{
	for(i=0;i<100;i++)//渐亮
   { PORTD |= (1<<PORTD2);//PC[0]=1
	   for(j=0;j<=i;j++)_delay_us(150);
	   PORTD &= ~(1<<PORTD2);//PC[0]=0
	   for(j=0;j<100-i;j++)_delay_us(150);
   }
   for(i=100;i>0;i--)//渐暗
   { PORTD |= (1<<PORTD2);//PC[0]=1
	   for(j=0;j<=i;j++)_delay_us(150);
	   PORTD &= ~(1<<PORTD2);//PC[0]=0
	   for(j=0;j<100-i;j++)_delay_us(150);
   }
	}  

*  用接在PD1管脚外的触摸开关去控制PB0管脚外连接的LED按呼吸灯方式亮灭：
      DDRB = (1<<DDRB0);
	DDRD &= ~(1<<DDRD1);入
    while (1) 
    {
		if(PIND & (1<<PIND1)) //PINB[1]=1?
		{
			int i,j;
		DDRB = (1<<DDRB0); //
		for(i=0;i<100;i++)//渐亮
		{ PORTB |= (1<<PORTB0);//PC[0]=1
			for(j=0;j<=i;j++)_delay_us(150);
			PORTB &= ~(1<<PORTB0);//PC[0]=0
			for(j=0;j<100-i;j++)_delay_us(150);
		}
		for(i=100;i>0;i--)//渐暗
		{ PORTB |= (1<<PORTB0);//PC[0]=1
			for(j=0;j<=i;j++)_delay_us(150);
			PORTB &= ~(1<<PORTB0);//PC[0]=0
			for(j=0;j<100-i;j++)_delay_us(150);
		}
		}
		else
		PORTB &= ~(1<<PORTB0); //PORTC[0]=0
    }

*用接在PD6管脚的触摸开关控制PB2,3,4管脚上的RGB LED的亮灭：
 unsigned char tpr1=0, tpr2=0,counter=0;
	DDRB= (1<<DDRB2)|(1<<DDRB3)|(1<<DDRB4);
	DDRD &= ~(1<<DDRD6);
    while (1) 
    {
		tpr2 = tpr1;
		tpr1 = (PIND & (1<<PIND6))>>6;
		if(tpr2==0 && tpr1==1)counter++;
		switch(counter)
		{
			case 1 : PORTB = (1<<PORTB2);break;
			case 2 : PORTB = (1<<PORTB3);break;
			case 3 : PORTB = (1<<PORTB4);break;
			default :PORTB =0;counter = 0;
		}
    }
3.实验心得：
在完成实验时不能一味套用课堂上的PPT，需要作出修正与改变
如：tpr1 = (PIND & (1<<PIND6))>>6;
此处的“>>6”需要特别注意，因为前面的PIND6已经作出了变化，我们也需要作出相应的变化
正确连接导线是每个程序实现的前提条件
在每个小程序实现前需要拆掉上一次小程序的连线，从而正确实现下一次小实验的连线























